{
    "openapi": "3.0.0",
    "info": {
        "title": "Pet Management System API",
        "version": "1.0.0",
        "description": "API for managing pets and user accounts."
    },
    "servers": [
        {
            "url": "https://petapi.eglenn.app",
            "description": "Production server"
        },
        {
            "url": "http://localhost:3000",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/pets": {
            "get": {
                "summary": "Get all pets (for admin or all pets of a user based on query parameter)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ownerId",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter pets by ownerId (same as username, optional)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of pets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pet"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Add a new pet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/TempPet" }
                        }
                    }
                },
                "responses": {
                    "201": { "description": "Pet created" },
                    "400": { "description": "Bad request" }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/pets/{id}": {
            "get": {
                "summary": "Get a pet by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": { "type": "string" },
                        "description": "Pet ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TempPet"
                                }
                            }
                        }
                    },
                    "404": { "description": "Pet not found" }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a pet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": { "type": "string" },
                        "description": "Pet ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/TempPet" }
                        }
                    }
                },
                "responses": {
                    "200": { "description": "Pet updated" },
                    "404": { "description": "Pet not found" }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a pet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": { "type": "string" },
                        "description": "Pet ID"
                    }
                ],
                "responses": {
                    "204": { "description": "Pet deleted" },
                    "404": { "description": "Pet not found" }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "TempPet": {
                "type": "object",
                "properties": {
                    "name": { "type": "string" },
                    "type": { "type": "string" },
                    "breed": { "type": "string" },
                    "color": { "type": "string" },
                    "birthdate": { "type": "string", "format": "date" },
                    "sex": { "type": "string" },
                    "location": { "type": "string" }
                },
                "required": ["name", "type"]
            },
            "Pet": {
                "type": "object",
                "properties": {
                    "_id": { "type": "string" },
                    "name": { "type": "string" },
                    "type": { "type": "string" },
                    "breed": { "type": "string" },
                    "color": { "type": "string" },
                    "birthdate": { "type": "string", "format": "date" },
                    "sex": { "type": "string" },
                    "location": { "type": "string" }
                },
                "required": ["name", "type"]
            },
            "User": {
                "type": "object",
                "properties": {
                    "_id": { "type": "string" },
                    "username": { "type": "string" },
                    "password": { "type": "string" }
                },
                "required": ["username", "password"]
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}
